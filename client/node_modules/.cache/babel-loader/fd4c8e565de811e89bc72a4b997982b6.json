{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport RangeSlider from '@gilbarbara/react-range-slider';\nimport ClickOutside from './ClickOutside';\nimport VolumeHigh from './icons/VolumeHigh';\nimport VolumeLow from './icons/VolumeLow';\nimport VolumeMute from './icons/VolumeMute';\nimport { px, styled } from '../styles';\nvar Wrapper = styled('div')({\n  'pointer-events': 'all',\n  position: 'relative',\n  zIndex: 20,\n  '> div': {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: px(12),\n    position: 'absolute',\n    right: \"-\".concat(px(3))\n  },\n  '> button': {\n    fontSize: px(26)\n  },\n  '@media (max-width: 1023px)': {\n    display: 'none'\n  }\n}, function (_a) {\n  var _b;\n\n  var style = _a.style;\n  return {\n    '> button': {\n      color: style.c\n    },\n    '> div': (_b = {\n      backgroundColor: style.bgColor,\n      boxShadow: style.altColor ? \"1px 1px 10px \".concat(style.altColor) : 'none'\n    }, _b[style.p] = '120%', _b)\n  };\n}, 'VolumeRSWP');\n\nvar Volume =\n/** @class */\nfunction (_super) {\n  __extends(Volume, _super);\n\n  function Volume(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.handleClick = function () {\n      _this.setState(function (state) {\n        return {\n          isOpen: !state.isOpen\n        };\n      });\n    };\n\n    _this.handleChangeSlider = function (_a) {\n      var y = _a.y;\n      var setVolume = _this.props.setVolume;\n      var volume = Math.round(y) / 100;\n      clearTimeout(_this.timeout);\n      _this.timeout = window.setTimeout(function () {\n        setVolume(volume);\n      }, 250);\n\n      _this.setState({\n        volume: volume\n      });\n    };\n\n    _this.handleAfterEnd = function () {\n      setTimeout(function () {\n        _this.setState({\n          isOpen: false\n        });\n      }, 100);\n    };\n\n    _this.state = {\n      isOpen: false,\n      volume: props.volume\n    };\n    return _this;\n  }\n\n  Volume.prototype.componentDidUpdate = function (previousProps) {\n    var volumeState = this.state.volume;\n    var volume = this.props.volume;\n\n    if (previousProps.volume !== volume && volume !== volumeState) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        volume: volume\n      });\n    }\n  };\n\n  Volume.prototype.render = function () {\n    var _a = this.state,\n        isOpen = _a.isOpen,\n        volume = _a.volume;\n    var _b = this.props,\n        playerPosition = _b.playerPosition,\n        _c = _b.styles,\n        altColor = _c.altColor,\n        bgColor = _c.bgColor,\n        color = _c.color,\n        title = _b.title;\n    var icon = React.createElement(VolumeHigh, null);\n\n    if (volume === 0) {\n      icon = React.createElement(VolumeMute, null);\n    } else if (volume <= 0.5) {\n      icon = React.createElement(VolumeLow, null);\n    }\n\n    return React.createElement(Wrapper, {\n      style: {\n        altColor: altColor,\n        bgColor: bgColor,\n        c: color,\n        p: playerPosition\n      }\n    }, isOpen && React.createElement(ClickOutside, {\n      onClick: this.handleClick\n    }, React.createElement(RangeSlider, {\n      axis: \"y\",\n      className: \"rrs\",\n      onAfterEnd: this.handleAfterEnd,\n      onChange: this.handleChangeSlider,\n      styles: {\n        options: {\n          thumbBorder: \"2px solid \".concat(color),\n          thumbBorderRadius: 12,\n          thumbColor: bgColor,\n          thumbSize: 12,\n          padding: 0,\n          rangeColor: altColor || '#ccc',\n          trackColor: color,\n          width: 6\n        }\n      },\n      y: volume * 100,\n      yMax: 100,\n      yMin: 0\n    })), React.createElement(\"button\", {\n      \"aria-label\": title,\n      onClick: !isOpen ? this.handleClick : undefined,\n      title: title,\n      type: \"button\"\n    }, icon));\n  };\n\n  return Volume;\n}(React.PureComponent);\n\nexport default Volume;","map":{"version":3,"mappings":"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","names":["React","RangeSlider","ClickOutside","VolumeHigh","VolumeLow","VolumeMute","px","styled","Wrapper","position","zIndex","display","flexDirection","padding","right","fontSize","_a","style","color","c","_b","backgroundColor","bgColor","boxShadow","altColor","p","__extends","props","_super","_this","setState","isOpen","state","y","setVolume","volume","Math","round","clearTimeout","timeout","window","setTimeout","Volume","previousProps","volumeState","playerPosition","_c","title","icon","onClick","handleClick","axis","className","onAfterEnd","handleAfterEnd","onChange","handleChangeSlider","styles","options","thumbBorder","thumbBorderRadius","thumbColor","thumbSize","rangeColor","trackColor","width","yMax","yMin","undefined","type","PureComponent"],"sources":["/Users/shelvymurphy-brown/Desktop/spotify-react/client/node_modules/react-spotify-web-playback/src/components/Volume.tsx"],"sourcesContent":["import * as React from 'react';\nimport RangeSlider, { RangeSliderPosition } from '@gilbarbara/react-range-slider';\n\nimport ClickOutside from './ClickOutside';\nimport VolumeHigh from './icons/VolumeHigh';\nimport VolumeLow from './icons/VolumeLow';\nimport VolumeMute from './icons/VolumeMute';\n\nimport { px, styled } from '../styles';\nimport { StyledProps, StylesOptions } from '../types/common';\n\ninterface Props {\n  playerPosition: string;\n  setVolume: (volume: number) => any;\n  styles: StylesOptions;\n  title: string;\n  volume: number;\n}\n\ninterface State {\n  isOpen: boolean;\n  volume: number;\n}\n\nconst Wrapper = styled('div')(\n  {\n    'pointer-events': 'all',\n    position: 'relative',\n    zIndex: 20,\n\n    '> div': {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: px(12),\n      position: 'absolute',\n      right: `-${px(3)}`,\n    },\n\n    '> button': {\n      fontSize: px(26),\n    },\n\n    '@media (max-width: 1023px)': {\n      display: 'none',\n    },\n  },\n  ({ style }: StyledProps) => ({\n    '> button': {\n      color: style.c,\n    },\n    '> div': {\n      backgroundColor: style.bgColor,\n      boxShadow: style.altColor ? `1px 1px 10px ${style.altColor}` : 'none',\n      [style.p]: '120%',\n    },\n  }),\n  'VolumeRSWP',\n);\n\nexport default class Volume extends React.PureComponent<Props, State> {\n  private timeout: number | undefined;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n      volume: props.volume,\n    };\n  }\n\n  public componentDidUpdate(previousProps: Props) {\n    const { volume: volumeState } = this.state;\n    const { volume } = this.props;\n\n    if (previousProps.volume !== volume && volume !== volumeState) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ volume });\n    }\n  }\n\n  private handleClick = () => {\n    this.setState(state => ({ isOpen: !state.isOpen }));\n  };\n\n  private handleChangeSlider = ({ y }: RangeSliderPosition) => {\n    const { setVolume } = this.props;\n    const volume = Math.round(y) / 100;\n\n    clearTimeout(this.timeout);\n\n    this.timeout = window.setTimeout(() => {\n      setVolume(volume);\n    }, 250);\n\n    this.setState({ volume });\n  };\n\n  private handleAfterEnd = () => {\n    setTimeout(() => {\n      this.setState({ isOpen: false });\n    }, 100);\n  };\n\n  public render() {\n    const { isOpen, volume } = this.state;\n    const {\n      playerPosition,\n      styles: { altColor, bgColor, color },\n      title,\n    } = this.props;\n    let icon = <VolumeHigh />;\n\n    if (volume === 0) {\n      icon = <VolumeMute />;\n    } else if (volume <= 0.5) {\n      icon = <VolumeLow />;\n    }\n\n    return (\n      <Wrapper style={{ altColor, bgColor, c: color, p: playerPosition }}>\n        {isOpen && (\n          <ClickOutside onClick={this.handleClick}>\n            <RangeSlider\n              axis=\"y\"\n              className=\"rrs\"\n              onAfterEnd={this.handleAfterEnd}\n              onChange={this.handleChangeSlider}\n              styles={{\n                options: {\n                  thumbBorder: `2px solid ${color}`,\n                  thumbBorderRadius: 12,\n                  thumbColor: bgColor,\n                  thumbSize: 12,\n                  padding: 0,\n                  rangeColor: altColor || '#ccc',\n                  trackColor: color,\n                  width: 6,\n                },\n              }}\n              y={volume * 100}\n              yMax={100}\n              yMin={0}\n            />\n          </ClickOutside>\n        )}\n        <button\n          aria-label={title}\n          onClick={!isOpen ? this.handleClick : undefined}\n          title={title}\n          type=\"button\"\n        >\n          {icon}\n        </button>\n      </Wrapper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}